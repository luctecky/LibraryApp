@page "/books/details/{Id:guid}"
@rendermode InteractiveServer
@using LibraryApp.Application.DTOs.Book
@using LibraryApp.Application.Interfaces
@inject IBookService BookService
@inject NavigationManager NavigationManager

<PageTitle>Detalhes do Livro</PageTitle>

<h1>Detalhes do livro</h1>

@if (book ==null)
{
	<p><em>Carregando...</em></p>
}
else
{
	<div class="card">
		<div class="card-header">
			<h3>@book.Title</h3>
		</div>
		<div class="card-body">
			<div class="row mb-3">
				<div class="col-md-3 font-weight-bold">Autor:</div>
				<div class="col-md-9">@book.Author</div>
			</div>
			<div class="row mb-3">
				<div class="col-md-3 font-weight-bold">ISBN:</div>
				<div class="col-md-9">@book.ISBN</div>
			</div>
			<div>
				<div class="row mb-3">
					<div class="col-md-3 font-weight-bold">Ano de Publicação:</div>
					<div class="col-md-9">@book.PublicationYear</div>
				</div>
				<div class="row mb-3">
					<div class="col-md-3 font-weight-bold">Editora:</div>
					<div class="col-md-9">@book.Publisher</div>
				</div>
				<div>
					<div class="row mb-3">
						<div class="col-md-3 font-weight-bold">Gênero:</div>
						<div class="col-md-9">@book.Genre</div>
					</div>
				</div>
				<div>
					<div class="row mb-3">
						<div class="col-md-3 font-weight-bold">Exemplares disponíveis:</div>
						<div class="col-md-9">@book.AvaliableCopies</div>
					</div>
				</div>
				<div class="row mb-3">
					<div class="col-md-3 font-weight-bold">Total de Exemplares:</div>
					<div class="col-md-9">@book.TotalCopies</div>
				</div>
				<div class="row mb-2">
					<div class="col-md-3 font-weight-bold">Descrição:</div>
					<div class="col-md-9">@book.Description</div>
				</div>
			</div>
			<div class="card-footer">
				<a href="/books/edit/@book.Id" class="btn btn-primary">Editar</a>
				<a href="/books" class="btn btn-secondary">Voltar para Lista</a>
			</div>
		</div>
	</div>
}

@code {
	[Parameter]
	public Guid Id { get; set; }

	private BookDto book;

	protected override async Task OnInitializedAsync()
	{
		try
		{
			book = await BookService.GetBookByIdAsync(Id);
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Error: {ex.Message}");
		}
		finally
		{
			StateHasChanged();
		}
	}
}
