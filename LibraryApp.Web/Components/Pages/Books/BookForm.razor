@page "/books/create"
@rendermode InteractiveServer
@using LibraryApp.Application.DTOs.Book
@using LibraryApp.Application.Interfaces
@inject IBookService BookService
@inject NavigationManager NavigationManager

<PageTitle>Adicionar Novo Livro</PageTitle>

<h1>Adicionar Novo Livro</h1>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<div class="row">
    <div class="col-md-6">
        <EditForm Model="@bookDto" OnValidSubmit="CreateBookAsync" FormName="BookForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mb-3">
                <label for="title">Título:</label>
                <InputText id="title" @bind-Value="bookDto.Title" class="form-control" />
                <ValidationMessage For="@(() => bookDto.Title)" />
            </div>

            <div class="form-group mb-3">
                <label for="author">Autor:</label>
                <InputText id="author" @bind-Value="bookDto.Author" class="form-control" />
                <ValidationMessage For="@(() => bookDto.Author)" />
            </div>

            <div class="form-group mb-3">
                <label for="isbn">ISBN:</label>
                <InputText id="isbn" @bind-Value="bookDto.ISBN" class="form-control" />
                <ValidationMessage For="@(() => bookDto.ISBN)" />
            </div>

            <div class="form-group mb-3">
                <label for="publicationYear">Ano de Publicação:</label>
                <InputNumber id="publicationYear" @bind-Value="bookDto.PublicationYear" class="form-control" />
                <ValidationMessage For="@(() => bookDto.PublicationYear)" />
            </div>

            <div class="form-group mb-3">
                <label for="publisher">Editora:</label>
                <InputText id="publisher" @bind-Value="bookDto.Publisher" class="form-control" />
                <ValidationMessage For="@(() => bookDto.Publisher)" />
            </div>

            <div class="form-group mb-3">
                <label for="totalCopies">Total de Exemplares:</label>
                <InputNumber id="totalCopies" @bind-Value="bookDto.TotalCopies" class="form-control" />
                <ValidationMessage For="@(() => bookDto.TotalCopies)" />
            </div>

            <div class="form-group mb-3">
                <label for="genre">Gênero:</label>
                <InputText id="genre" @bind-Value="bookDto.Genre" class="form-control" />
                <ValidationMessage For="@(() => bookDto.Genre)" />
            </div>

            <div class="form-group mb-3">
                <label for="description">Descrição:</label>
                <InputTextArea id="description" @bind-Value="bookDto.Description" class="form-control" rows="4" />
                <ValidationMessage For="@(() => bookDto.Description)" />
            </div>

            <div class="form-group mb-3">
                <button type="submit" class="btn btn-primary">Salvar</button>
                <a href="/" class="btn btn-secondary">Cancelar</a>
            </div>
        </EditForm>
    </div>
</div>

@code {

    private CreateBookDto bookDto = new();
    private string errorMessage;
    
    private async Task CreateBookAsync()
    {
        try
        {
            errorMessage = null;     
            await BookService.CreateBookAsync(bookDto);
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao criar livro: {ex.Message}";
            StateHasChanged();
        }
    }
}